#!/usr/bin/with-contenv bash
set -e

vecho () { if [ "${S6_VERBOSITY:-1}" -gt 0 ]; then echo "[$0] $@"; fi; }

S6_USER="${S6_USER:-git}"; # set in Dockerfile
S6_USERHOME="${S6_USERHOME:-/home/$S6_USER}";

CGIT_HOSTNAME="${CGIT_HOSTNAME:-localhost}";
CGIT_REPODIR="${CGIT_REPODIR:-$S6_USERHOME/repositories}"; # set in Dockerfile
# CGIT_SUBPATH="${CGIT_SUBPATH:-/git}"; # unset by default since it can also be ""

LIGHTTPD_CONFDIR="${LIGHTTPD_CONFDIR:-/etc/lighttpd}";
LIGHTTPD_LOGFILE="${LIGHTTPD_LOGFILE:-/var/log/lighttpd/lighttpd.log}";
LIGHTTPD_USER="${LIGHTTPD_USER:-lighttpd}";

vecho "Ensure configuration directories exist.";
mkdir -p \
    "${CGIT_REPODIR}" \
    "${LIGHTTPD_CONFDIR}" \
    "$(dirname ${LIGHTTPD_LOGFILE})" \
    ;

# function to substitute paths in config files
_subst () {
    sed \
    -e "s|CGIT_USER|$S6_USER|g" \
    -e "s|CGIT_HOSTNAME|$CGIT_HOSTNAME|g" \
    -e "s|CGIT_REPODIR|$CGIT_REPODIR|g" \
    -e "s|CGIT_SUBPATH|$CGIT_SUBPATH|g" \
    -e "s|LIGHTTPD_USER|$LIGHTTPD_USER|g" \
    -e "s|LIGHTTPD_LOGFILE|$LIGHTTPD_LOGFILE|g" \
    $1 > $2;
}

# make sure cgitrc exists
if [ ! -f /etc/cgitrc ];
then
    vecho "Setting up CGit configurations at /etc/cgitrc.";
    _subst /defaults/cgitrc /etc/cgitrc;
fi;

# make sure lighttpd conf exists
if [ ! -f "${LIGHTTPD_CONFDIR}/lighttpd.conf" ];
then
    vecho "Setting up default Lighttpd configurations at ${LIGHTTPD_CONFDIR}/lighttpd.conf.";
    _subst /defaults/lighttpd.conf "${LIGHTTPD_CONFDIR}/lighttpd.conf";
fi;

if [ ! -f "${LIGHTTPD_CONFDIR}/cgit.conf" ];
then
    vecho "Setting up default Lighttpd configurations for CGit at ${LIGHTTPD_CONFDIR}/cgit.conf (path: ${CGIT_SUBPATH}/).";
    if [ "${CGIT_SUBPATH}" == "" ];
    then
        _subst /defaults/cgit.root.lighttpd.conf "${LIGHTTPD_CONFDIR}/cgit.conf";
    else
        _subst /defaults/cgit.subpath.lighttpd.conf "${LIGHTTPD_CONFDIR}/cgit.conf";
    fi;
fi;

# fix permissions
if [ -z "${CGIT_SKIP_PERMFIX}" ] \
&& [ "X${EUID}" == "X0" ]; # requires root
then
    vecho "Fixing permissions.";
    chown ${S6_USER:-git}:${PGID:-1000} \
        "${S6_USERHOME}" \
        "${CGIT_REPODIR}" \
        ; # if not existing, docker mounts this dir as root:root

    # ensure we can run scripts
    chown -R ${S6_USER:-git}:${PGID:-1000} /scripts/;
    chmod +x /scripts/*;
fi;

# fix repo permissions
# may become cumbersome if REPODIR has large number of repositories
if [ -n "${CGIT_PERMFIX_REPOS}" ] \
&& [ "X${EUID}" == "X0" ]; # requires root
then
    vecho "Fixing permissions on $CGIT_REPODIR repositories.";
    find "${CGIT_REPODIR}" \
        \! -user ${S6_USER:-git} -exec \
        chown --no-dereference \
        ${S6_USER:-git}:${PGID:-1000} \
        '{}' +;
fi;
